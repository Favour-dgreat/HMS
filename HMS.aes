payable contract HMS =

  record patient =
    { patientAddress    : address,
      name              : string,
      sex               : string,
      ipfsHash          : string,
      patientID         : string }

  record doctor =
    { name          : string,
      doctorAddress : address}

  record medicalRecord =
    { doctor          : string,
      date            : string,
      height          : string,
      weight          : string,
      bmi             : string,
      genotype        : string,
      bloodgroup      : string,
      medicationGiven : string }

  record state =
    { patients: map(address,patient),
      doctors: map(address,doctor),
      medicalRecords: map(address,list(medicalRecord)),
      owner: address }

  stateful entrypoint init() =
    { patients = {},
      doctors = {},
      medicalRecords = {},
      owner = ak_5WVyRqQzwHBotguBYmi6J4kwztL2PchJ5qTpL6T5Bttn3oX83 }

  payable stateful entrypoint addDoctor(name':string) =
    let newDoctor={name=name', doctorAddress=Call.caller}

    Chain.spend(state.owner, 2000000000000000000)

    put(state{doctors[Call.caller]=newDoctor})

  stateful entrypoint addPatient(name':string, sex':string,ipfsHash':string, patientID':string)=
    let newPatient={patientAddress = Call.caller, name = name', sex = sex', ipfsHash = ipfsHash', patientID = patientID'}

    put(state{patients[Call.caller]=newPatient})


  stateful entrypoint addMedicalRecord(date':string, height':string, weight':string,bmi':string,genotype':string,bloodgroup':string,medicationGiven':string, pAddress':address)=
    let doctor = state.doctors[Call.caller]
    let sPatient = searchPatient(pAddress')
    require(doctor.doctorAddress == Call.caller, "Only Doctors")
    let newRecord={doctor = doctor.name, date = date', height = height', weight = weight', bmi = bmi', genotype = genotype', bloodgroup = bloodgroup',medicationGiven = medicationGiven'}

    let medicalRecord=Map.lookup_default(Call.caller,state.medicalRecords,[])
    let newMedicalRecord=newRecord::medicalRecord

    put(state{medicalRecords[sPatient.patientAddress]=newMedicalRecord})

  entrypoint searchPatient(patientAddress : address) : patient =
    switch(Map.lookup(patientAddress, state.patients))
      None    => abort("Patient Not Found.")
      Some(x) => x

  entrypoint getPatient()=
    require(state.patients[Call.caller].patientAddress == Call.caller, "Patient Only")
    state.patients[Call.caller]  

  entrypoint getDoctor()=
    require(state.doctors[Call.caller].doctorAddress == Call.caller, "Doctor Only")
    state.doctors[Call.caller] 

  entrypoint getOwner()=
    require(state.owner == Call.caller, "Owner Only") 

  entrypoint patientRecord()=
    require(state.patients[Call.caller].patientAddress == Call.caller, "Patient Only")
    state.medicalRecords[Call.caller]

  entrypoint allPatients()=
    state.patients

  entrypoint allDoctors()=
    require(state.owner == Call.caller, "Owner Only")
    state.doctors

  entrypoint allRecords()=
    require(state.owner == Call.caller, "Owner Only")
    state.medicalRecords